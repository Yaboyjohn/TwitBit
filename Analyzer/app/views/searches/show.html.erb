<head>
  <script async defer
    src=
    "https://maps.googleapis.com/maps/api/js?key=AIzaSyBmCWMVKVJvNyUrCwP6yIwLApM9qFVpu2c&libraries=places,drawing,geometry&v=3&callback=initMap">
  </script>
  <META HTTP-EQUIV="Pragma" CONTENT="no-cache">
  <META HTTP-EQUIV="Expires" CONTENT="-1">
  <link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Droid+Sans">
  <link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Yellowtail">
  <link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Comfortaa">
  <link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Lato">
  <link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Kalam">
  <link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Sriracha">
  <link rel="stylesheet" type="text/css" href="http://fonts.googleapis.com/css?family=Scope+One">
  <script src="http://d3js.org/d3.v3.min.js"></script>
  <script src="http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js"></script>
  <style>
    body {
      margin: 0;
      padding: 0;
      /*background-color: #11c1ff;*/
      background-color: #051454;
      background-image: none !important;
    }

    .axis path,
    .axis line {
      fill: none;
      stroke: #000;
      shape-rendering: crispEdges;
    }

    .bar {
      position: absolute;
      fill: blue;
    }

    .bar:hover {
      fill: rgb(5, 212, 1) ;
    }

    .x.axis path {
      display: none;
    }

    .d3-tip {
      line-height: 1;
      font-weight: bold;
      padding: 12px;
      background: rgba(0, 0, 0, 0.8);
      color: #fff;
      border-radius: 2px;
    }

    /* Creates a small triangle extender for the tooltip */
    .d3-tip:after {
      box-sizing: border-box;
      display: inline;
      font-size: 10px;
      width: 100%;
      line-height: 1;
      color: rgba(0, 0, 0, 0.8);
      content: "\25BC";
      position: absolute;
      text-align: center;
    }

    /* Style northward tooltips differently */
    .d3-tip.n:after {
      margin: -1px 0 0 0;
      top: 100%;
      left: 0;
    }
  </style>
</head>
<!-- The Title of the show view -->
<h2 id="twitbit-title"> Your Twitbit Score </h2>
<!-- Container div for the twitbit score section -->
<div id="show-page-container">
  <!-- The score/rotating graph side of the section -->
  <div id="score-page">
    <div id="complete-score-holder">
      <div id="score-circle">
        <div id="chart"></div>
        <div id="inner-circle-outline">
          <!-- actual score to be dispalyed -->
          <p id="score"></p>
          <!-- stores the actual score for animations but is not visibly apparent -->
          <p id="dummyscore"></p>
        </div>
      </div>
    </div>
  </div>
  <!-- The category/picture person side of the section -->
  <div id="comparison-picture-div">
    <div id="comparison-picture-container">
      <img id="comparison-image" src="http://orig08.deviantart.net/accf/f/2015/299/9/7/white_square__4k__by_flutterspon-d9efzq4.jpg">
    </div>
  </div>
  <!-- The middle of the section with the Category name and intro -->
  <div id="comparison">
    <p id="comparison-intro">You fall under the category of...</p>
  </div>
  <h2 id="comparison-category">TEXT</h2>
  <p id="twitbit-information"> What is this? </p>
</div>
<!-- div for the info that pops up from clicking "what's this?" -->
<div id="extra-info-div">
  <h1 id="extra-info-close-button">X</h1>
  <h2 id='extra-info-title'>What exactly is my Twitbit score?</h2>
  <p id='extra-info'>We're glad you asked. TwitBit takes into account your most recent
    200 tweets (not including retweets) and analyzes your word choice and spelling. This then generates a score,
    which places you under a certain category of people who share relatively the same score as you.
  </p>
  <%= link_to 'To see more click here>>>', searches_words_path, id: "see-more-link" %>
</div>
<!-- The options box in the upper left hand of the page -->
<div id="options-container"></div>
<div id="options-box">
  <ul id="options-list">
    <li class="options" id="about">TwitBit Score</li></a>
    <li class="options" id="projects">Data</li>
    <li class="options" id="hot-spots">Hot Spots</li>
    <li class="options" id="contact">Best Friends</li>
    <li class="options"><%= link_to 'Search', new_search_path, id: "back-button" %></li>
    <li class="options"><%= link_to 'History', searches_path, id: "back-button" %></li>
    </ul>
</div>
<!-- start of the data section; placeholder for now -->
  <div id="data-page">

  </div>
<div id="map-page">
<!-- the google map-->
<h2 id="hotspots-title">ðŸ”¥ MY HOTSPOTS ðŸ”¥</h2>
  <div id="map"></div>
</div>
<script>
var margin = {top: 40, right: 20, bottom: 30, left: 40},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var formatPercent = d3.format(".0%");

var x = d3.scale.ordinal()
    .rangeRoundBands([0, width], .1);

var y = d3.scale.linear()
    .range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .tickFormat(formatPercent);

var tip = d3.tip()
  .attr('class', 'd3-tip')
  .offset([-10, 0])
  .html(function(d) {
    return "<strong>Frequency:</strong> <span style='color:red'>" + d.frequency + "</span>";
  })

var svg = d3.select("#data-page").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

svg.call(tip);

// The new data variable.

var data = [
  {letter: "Super early morning", frequency: gon.tweet_times.super_early_morning},
  {letter: "Morning", frequency: gon.tweet_times.morning},
  {letter: "Afternoon", frequency: gon.tweet_times.afternoon},
  {letter: "Evening", frequency: gon.tweet_times.evening},
  {letter: "Night", frequency: gon.tweet_times.night},
  {letter: "Late Night", frequency: gon.tweet_times.late_night}
]
// The following code was contained in the callback function.
x.domain(data.map(function(d) { return d.letter; }));
y.domain([0, d3.max(data, function(d) { return d.frequency; })]);

svg.append("g")
    .attr("class", "x axis")
    .attr("transform", "translate(0," + height + ")")
    .call(xAxis);

svg.append("g")
    .attr("class", "y axis")
    .call(yAxis)
  .append("text")
    .attr("transform", "rotate(-90)")
    .attr("y", 6)
    .attr("dy", ".71em")
    .style("text-anchor", "end")
    .text("Frequency");

svg.selectAll(".bar")
    .data(data)
  .enter().append("rect")
    .attr("class", "bar")
    .attr("x", function(d) { return x(d.letter); })
    .attr("width", x.rangeBand())
    .attr("y", function(d) { return y(d.frequency); })
    .attr("height", function(d) { return height - y(d.frequency); })
    .on('mouseover', tip.show)
    .on('mouseout', tip.hide)

function type(d) {
  d.frequency = +d.frequency;
  return d;
}

</script>
*/
<script src="http://d3js.org/d3.v3.min.js"></script>
<script>

//setTimeout delay to allow the dummy score to load
setTimeout(function() {
  (function(d3) {
            //dummyscore to generate each length of the pie chart arc
            var dummyscore = document.getElementById('dummyscore').innerHTML;
            //do everything out of 100
            //max will be 0.4
            var bar = (dummyscore / 0.4) * 100;
            var emptySpace = 100 - bar;
            'use strict';
            var dataset = [
              { label: 'Bar', count: bar },
              { label: 'Empty Space', count: emptySpace },

            ];
            //not responsive; look into this
            var width = 240;
            var height = 232;
            var donutWidth = 20;
            var radius = Math.min(width, height) / 2;
            var color = d3.scaleOrdinal(d3.schemeCategory10);
            var colors = ["white", "#051454"];
            var svg = d3.select('#chart')
              .append('svg')
              .attr('width', width)
              .attr('height', height)
              .append('g')
              .attr('transform', 'translate(' + (width / 2) +
                ',' + (height / 2) + ')');

            var arc = d3.arc()
              .innerRadius(radius - donutWidth)
              .outerRadius(radius);
            var pie = d3.pie()
              .value(function(d) { return d.count; })
              .sort(null);
            var path = svg.selectAll('path')
              .data(pie(dataset))
              .enter()
              .append('path')
              .attr('d', arc)
              .attr('fill', function(d, i) {
                return colors[i];
              });
              path.transition()
              .duration(2000)
              .attrTween("d", tweenPie);

              //the rotating arc function
              function tweenPie(b) {
                var i = d3.interpolate({startAngle: 0, endAngle: 2 * Math.PI}, b);
                return function(t) { return arc(i(t)); };
              }
          })(window.d3);
}, 800);

$(document).ready(function() {
  //highlight the option when you hover over it
  $('.options').mouseenter(function() {
    $(this).css("opacity", "1");
  });
  $('.options').mouseleave(function() {
    $(this).css("opacity", "0.2");
  });
  //function to move the score circle and the comparison circle
  var moveIcons = function() {
    $('#score-circle').animate({
      left: "30%"
    }, 600);
    $('#comparison-picture-div').animate({
      left: "68%"
    }, 600);
  }
  //delay to make it look nicer
  setTimeout(moveIcons, 1500);
  var spanWidth = $('#comparison-intro').width();
  $('#comparison').animate( { width: 1000 }, 3000 );

  var showExtraInfo = function() {
    $('#extra-info-div').animate({
      height: "60%"
    }, 300);
  }

  var hideExtraInfo = function() {
    $('#extra-info-div').animate({
      height: "0%"
    }, 300);
  }
  $("#twitbit-information").click(function() {
    showExtraInfo();
  });
  $("#extra-info-close-button").click(function() {
    hideExtraInfo();
  });
});
</script>
